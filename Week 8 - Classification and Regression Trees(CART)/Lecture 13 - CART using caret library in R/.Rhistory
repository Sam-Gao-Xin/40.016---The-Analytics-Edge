rm(list=ls()) # Clear the environment
setwd("/Users/james/OneDrive - Singapore University of Technology and Design/SUTD/Year 3/Term 6/40.016 - The Analytics Edge/Week 8/Lecture 13 - CART using caret library in R")  # Setup the working directory
supreme <- read.csv("/Users/james/OneDrive - Singapore University of Technology and Design/SUTD/Year 3/Term 6/40.016 - The Analytics Edge/Week 8/Lecture 12 - CART and Supreme Court/supreme(7).csv") # We have 623 observations and 20 variables
str(supreme)      # Internal structure of the dataframe
str(supreme)      # Internal structure of the dataframe
head(supreme)     # First part of the dataframe
head(supreme)     # First part of the dataframe
summary(supreme)  # Summary of the data
stevens <- subset(supreme[,c("docket","term","stevdir","petit","respon","circuit","unconst","lctdir","issue","result")],supreme$stevdir!=9)
stevens$rev <- as.integer((stevens$lctdir=="conser" & stevens$stevdir==0) | (stevens$lctdir=="liberal" & stevens$stevdir==1))
library(caTools)
if(!require(caTools)){                          # install or load the package
install.packages("caTools")
library(caTools)
}
set.seed(123)                                   # set seed for random sampling
spl <- sample.split(stevens$rev,SplitRatio=0.7) # We use 70% of the data for training
train <- subset(stevens,spl==TRUE);             # training dataset
test <- subset(stevens,spl==FALSE);             # testing dataset
m1 <- glm(rev~petit+respon+circuit+unconst+issue+lctdir,data=train,family="binomial")
summary(m1)
test <- subset(test,test$issue!="IR")
p1 <- predict(m1,newdata=test,type="response")
test <- subset(test,test$issue!="IR")
p1 <- predict(m1,newdata=test,type="response")
How does the model perform?
```{r}
table(p1>=0.5,test$rev)
```
test <- subset(test,test$issue!="IR")
p1 <- predict(m1,newdata=test,type="response")
test <- subset(test,test$issue!="IR")
p1 <- predict(m1,newdata=test,type="response")
How does the model perform?
```{r}
table(p1>=0.5,test$rev)
```
table(p1>=0.5,test$rev)
if(!require(rpart)){        # rpart is for CART
install.packages("rpart")
library(rpart)
}
print(cart1)
cart1 <- rpart(rev~petit+respon+circuit+lctdir+issue+unconst,data=train,method="class")
print(cart1)
plot(cart1); text(cart1)
install.packages("rpart.plot")
install.packages("rpart.plot")
library(rpart.plot)
if(!require(rpart.plot)){
install.packages("rpart.plot")
library(rpart.plot)
}
prp(cart1)        # default visualization
predictcart1 <- predict(cart1,newdata=test,type="class")
predictcart1
table(test$rev,predictcart1)
summary(cart1)
plot(cart1); text(cart1)
if(!require(rpart.plot)){
install.packages("rpart.plot")
library(rpart.plot)
}
prp(cart1)        # default visualization
prp(cart1,type=1) # labels all nodes (not just the leaves)
prp(cart1,type=4) # draws separate labels for left and right directions for all nodes and label nodes
prp(cart1,type=4,extra=4) # in addition, this also plots the probability per class of observation
# prp(cart1,type=4,extra=9) # probablities times fraction of observations at the node (the sum across all leaves is 1)
predictcart1 <- predict(cart1,newdata=test,type="class")
if(!require(rattle)){
install.packages("rattle")
library(rattle)
}
if(!require(RColorBrewer)){
install.packages("RColorBrewer")
library(RColorBrewer)
}
fancyRpartPlot(cart1) # Run fancyRpartPlot
printcp(cart1)
opt <- which.min(cart1$cptable[,"xerror"]) # get index of CP with lowest xerror
cp <- cart1$cptable[opt, "CP"]            # get the corresponding value
cart2 <- prune(cart1,cp)
opt <- which.min(cart1$cptable[,"xerror"]) # get index of CP with lowest xerror
cp <- cart1$cptable[opt, "CP"]            # get the corresponding value
cart2 <- prune(cart1,cp)
As shown below, this is a much smaller tree!
```{r}
prp(cart2,type=4,extra=4)
predictcart2 <- predict(cart2,newdata=test,type="class")
table(test$rev,predictcart2)
