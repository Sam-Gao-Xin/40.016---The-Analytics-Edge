#install.packages("factoextra")
rm(list=ls())
# Read data
sp2011to2020 <- read.csv("socprog2020.csv")
# data check
head(sp2011to2020)
spi2020<-subset(sp2011to2020,SPI.year =="2020" & Status=="Ranked")
rownames(spi2020)<-spi2020[,2]
spirank<-spi2020[,1]
spi2020<-spi2020[,-c(1:6)]
dim(spi2020)
NAobject<-colnames(spi2020)[apply(is.na(spi2020),2,any)]
spi2020<-spi2020[,!names(spi2020)%in% NAobject]
#check
dim(spi2020)
head(spi2020)
spi2020["Singapore",]
summary(spi2020$Access.to.Basic.Knowledge)
spi2020[which.max(spi2020$Access.to.Basic.Knowledge),]
names(spi2020)
colnames(Stats)<-c("mean", "median","std.dev")
Stats
head(Stats)
names(spi2020)
colnames(Stats)<-c("mean", "median","std.dev")
Stats<-cbind(apply(spi2020, 2, mean),apply(spi2020, 2, "median"),apply(spi2020, 2, "sd"))
colnames(Stats)<-c("mean", "median","std.dev")
Stats
head(Stats)
pr.out.ns=prcomp(spi2020, scale=F)
pr.out.ns$x[1:10,1:5]
pr.out.ns=prcomp(spi2020, scale=F)
pr.out.ns$x[1:10,1:5]
#plot scree
plot(pr.out.ns, type="l", main="Scree plot")
#plot cumulative prop
pr.var.ns=pr.out.ns$sdev^2
pve.ns=pr.out.ns$sdev^2/sum(pr.out.ns$sdev^2)
plot(cumsum(pve.ns), xlab="Principal Component", ylab="Cumulative Proportion of Variance Explained", ylim=c(0,1),type='b')+abline(h=0.9,col="red")
# first PC explanation
pve.ns[1]
pr.out.ns=prcomp(spi2020, scale=T)
pr.out.ns$x[1:10,1:5]
pr.out.ns=prcomp(spi2020, scale=T)
pr.out.ns$x[1:10,1:5]
#plot scree
plot(pr.out.ns, type="l", main="Scree plot")
#plot cumulative prop
pr.var.ns=pr.out.ns$sdev^2
pve.ns=pr.out.ns$sdev^2/sum(pr.out.ns$sdev^2)
plot(cumsum(pve.ns), xlab="Principal Component", ylab="Cumulative Proportion of Variance Explained", ylim=c(0,1),type='b')+abline(h=0.9,col="red")
# first PC explanation
pve.ns[1]
#pr.out.ns$x
#pr.out.ns$rotation
sp.pc<-data.frame(pr.out.ns$x[,1:2])
#pr.out.ns$x
#pr.out.ns$rotation
sp.pc<-data.frame(pr.out.ns$x[,1:2])
sp.pc[order(-sp.pc$PC1),]
sp.pc[order(-sp.pc$PC2),]
sp.pc[order(-sp.pc$PC1),]
dim(spi2020)
co.sp.pc<-data.frame(pr.out.ns$rotation[,1:2])
co.sp.pc[order(-co.sp.pc[,1]),][c(1:5,50:54),]
co.sp.pc[order(-co.sp.pc[,2]),][c(1:5,50:54),]
co.sp.pc[order(-co.sp.pc[,1]),][c(1:5,50:54),]
co.sp.pc[order(-co.sp.pc[,2]),][c(1:5,50:54),]
#pr.out.ns$x
#pr.out.ns$rotation
sp.pc<-data.frame(pr.out.ns$x[,1:2])
sp.pc[order(-sp.pc$PC1),]
sp.pc[order(-sp.pc$PC2),]
Stats[1:5,]
Stats
plot(pr.out, type="l", main="Scree plot")+abline(h=1,col="red")
pr.out=prcomp(spi2020, scale=TRUE)
plot(pr.out, type="l", main="Scree plot")
plot(pr.out, type="l", main="Scree plot")+abline(h=1,col="red")
pr.var=pr.out$sdev^2
pr.var
pve=pr.var/sum(pr.var)
pve
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1),type='b')
plot(cumsum(pve), xlab="Principal Component", ylab="Cumulative Proportion of Variance Explained", ylim=c(0,1),type='b')  #+ abline(h=0.8,col="red")+abline(v=6,col="blue")
## Which components and which country?
sp4<-data.frame(pr.out$x[,1:4])
sp4[order(-sp4$PC1),]
## Which components and which country?
sp4<-data.frame(pr.out$x[,1:4])
sp4[order(-sp4$PC1),]
cosp4<-data.frame(pr.out$rotation[,1:4])
cosp4[order(-cosp4[,1]),]
## Correlation plot
## Check Stats earlier
library(corrplot)
corspi<-cor(spi2020)
## Correlation plot
## Check Stats earlier
library(corrplot)
corspi<-cor(spi2020)
dim(corspi)
rownames(corspi)<-colnames(corspi)<-1:54
corrplot(corspi,type="upper")
bigdim<-c("Basic.Human.Needs","Foundations.of.Wellbeing","Opportunity")
medcomp<-c("Nutrition.and.Basic.Medical.Care","Water.and.Sanitation","Shelter","Personal.Safety","Access.to.Basic.Knowledge","Access.to.Information.and.Communications","Health.and.Wellness","Environmental.Quality","Personal.Rights","Personal.Freedom.and.Choice","Inclusiveness","Access.to.Advanced.Education")
spi2020core<-spi2020[,!names(spi2020)%in% c(bigdim,medcomp)]
dim(spi2020core)
corspicore<-cor(spi2020core)
rownames(corspicore)<-colnames(corspicore)<-1:dim(corspicore)
corrplot(corspicore,type="upper")
pr.out.core=prcomp(spi2020core, scale=TRUE)
plot(pr.out.core, type="l", main="Scree plot for core indicators") +abline(h=1,col="red")
pr.var.core=pr.out.core$sdev^2
#pr.var.core
pve.core=pr.var.core/sum(pr.var.core)
pr.var.core
pve.core=pr.var.core/sum(pr.var.core)
pve.core
plot(pve.core, xlab="Core indicators: Principal Component", ylab="Proportion of Variance Explained", ylim=c(0,1),type='b')
plot(cumsum(pve.core), xlab="Core indicators: Principal Component", ylab="Cumulative Proportion of Variance Explained", ylim=c(0,1),type='b')
pve.core
n<-dim(spi2020core)[1]
k<-dim(spi2020core)[2]
nup<-5
kup<-3
sp4.core<-data.frame(pr.out.core$x[,1:4])
cosp4.core<-data.frame(pr.out.core$rotation[,1:4])
sp4.core
cosp4.core
cosp4.core[order(-cosp4.core[,1]),][c(1:kup,(k-kup+1):k),]
topbotPC1<-row.names(cosp4.core[order(-cosp4.core[,1]),])[c(1:kup,(k-kup+1):k)]
sp4.core[order(-sp4.core$PC1),][c(1:nup,(n-nup+1):n),]
topbotind1<-row.names(sp4.core[order(-sp4.core$PC1),])[c(1:nup,(n-nup+1):n)]
cosp4.core[order(-cosp4.core[,2]),][c(1:kup,(k-kup+1):k),]
topbotPC2<-row.names(cosp4.core[order(-cosp4.core[,2]),])[c(1:kup,(k-kup+1):k)]
sp4.core[order(-sp4.core$PC2),][c(1:nup,(n-nup+1):n),]
topbotind2<-row.names(sp4.core[order(-sp4.core$PC2),])[c(1:nup,(n-nup+1):n)]
cosp4.core[order(-cosp4.core[,3]),][c(1:kup,(k-kup+1):k),]
topbotPC3<-row.names(cosp4.core[order(-cosp4.core[,3]),])[c(1:kup,(k-kup+1):k)]
sp4.core[order(sp4.core$PC3),][c(1:nup,(n-nup+1):n),]
topbotind3<-row.names(sp4.core[order(-sp4.core$PC3),])[c(1:nup,(n-nup+1):n)]
cosp4.core[order(-cosp4.core[,4]),][c(1:kup,(k-kup+1):k),]
topbotPC4<-row.names(cosp4.core[order(-cosp4.core[,3]),])[c(1:kup,(k-kup+1):k)]
sp4.core[order(-sp4.core$PC4),][c(1:nup,(n-nup+1):n),]
topbotind4<-row.names(sp4.core[order(-sp4.core$PC4),])[c(1:nup,(n-nup+1):n)]
corspipc<-cor(pr.out.core$x)
corrplot(corspipc,type="upper")
library(factoextra)
fviz_eig(pr.out)
install.packages("factoextra")
library(factoextra)
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
install.packages(c("knitr", "tinytex", "withr"))
library(factoextra)
fviz_pca_ind(pr.out.core, labelsize=3,
col.ind = "contrib", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
geom = c("point","text"),
#select.ind = list(cos2 = 30),
select.ind= list(name=c(topbotind1,topbotind2)),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(pr.out.core, labelsize=3,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
select.var = list(name=c(topbotPC1,topbotPC2)),
repel = TRUE     # Avoid text overlapping
)
library(factoextra)
fviz_eig(pr.out)
fviz_pca_ind(pr.out.core, labelsize=3,
col.ind = "contrib", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
geom = c("point","text"),
#select.ind = list(cos2 = 30),
select.ind= list(name=c(topbotind1,topbotind2)),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(pr.out.core, labelsize=3,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
select.var = list(name=c(topbotPC1,topbotPC2)),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_ind(pr.out.core, labelsize=3,
col.ind = "contrib", # Color by the quality of representation
axes=c(3,4),
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
geom = c("point","text"),
#select.ind = list(cos2 = 30),
#theme(text = element_text(size = 2)),
select.ind= list(name=c(topbotind3,topbotind4)),
repel = TRUE     # Avoid text overlapping
)
spi_ae<-data.frame(sp4.core[,1])#-sp4.core[,2])#-sp4.core[,3]+sp4.core[,4])
rownames(spi_ae)<-rownames(sp4.core)
spi_ae$rank<-rank(-spi_ae)
spi_ae$spirank<-spirank
colnames(spi_ae)<-c("Score","Rank AE","Rank SPI")
spi_ae[order(spi_ae[,2]),]
