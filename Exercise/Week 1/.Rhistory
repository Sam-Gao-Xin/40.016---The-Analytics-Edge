fsolve(n*log[2](n) - 1000000 = 0)
fsolve(n*log[2](n) - 1000000 == 0)
z <- 0.9
z
class(z)
z1 <- c("a", "b")
class(z1)
model7  <- lm(LPRICE~VINT+WRAIN+DEREES+HRAIN+,data=winetrain)
model7  <- lm(LPRICE~VINT+WRAIN+DEREES+HRAIN+,data=winetrain)
model7  <- lm(LPRICE~VINT+WRAIN+DEGREES+HRAIN+,data=winetrain)
summary(model7)
model7a <- lm(LPRICE~WRAIN+DEGREES+HRAIN,data=winetrain)
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
---
title: "Wine analytics Notebook"
output:
html_notebook: default
html_document: default
pdf_document: default
---
```{r}
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
```
The dataset consists of 38 observations of 6 variables (small dataset): 1952 to 1989. Ashenfelter published his paper in 1990.
```{r}
wine <- read.csv("wine(2).csv")
str(wine)
summary(wine)
```
1954 and 1956 wine prices are not available in the dataset since they are rarely sold now. The prices from 1981 to 1989 are not available in the dataset.
The scatter plot indicates a negative relationship but there is considerable variation that still needs to be captured. We can also plot a matrix of all scatter plots using the pairs command.
Use plot() or ggplot()
pairs.panels() or pairs()
```{r}
ggplot(wine, aes(VINT,LPRICE)) + geom_point(na.rm=T) + geom_smooth(method="lm", na.rm=T, se=T)
Split the data set into a training dataset from 1952 to 1978 (drop 1954 and 1956 since prices are not observable) and we use the test set from 1979 onwards. Note that for the test set however we only have prices till 1980 (so in this case we can only use 1979 and 1980) to test the model.
One variable regression - lm() is the basic command to fit a linear model to the data.
The regression fit here is LPRICE = 72.99-0.0378*VINT.
Both estimated coefficents are significant at the 0.01 level with R^2 = 0.2005 and adjusted R^2 = 0.1657.
Plot the best fit line with a slope of -0.0378.
Evaluate the sum of squared errors and total sum of squares
residuals = actual - fitted
```{r}
model1$residuals
sse1 <- sum(model1$residuals^2)
sst1 <- sum(winetrains$LPRICE - mean(winetrain$LPRICE))^2
1 - sse1/sst1
#summary(model1)
```
The result indicates that older the wine, greater is the value but there is still significant variation.
One variable regression - continued
```{r}
model2  <- lm(...,data=winetrain)
summary(model2)
```
```{r}
model3  <- lm(...,data=winetrain)
summary(model3)
```
```{r}
model4  <- lm(...,data=winetrain)
summary(model4)
```
Two variables - The effect of DEGREES and HRAIN on LPRICE.
```{r}
#br<-mean(winetrain$LPRICE)
#ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf))))+geom_point(na.rm=T) + scale_color_discrete(name = "LPRICE", labels = c("<= mean(LPrice)", "> mean(LPRICE)"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
#plot(winetrain$DEGREES,winetrain$HRAIN,col=ifelse(winetrain$LPRICE>=mean(winetrain$LPRICE),"red","black"))
```
The figure indicates that hot and dry summers produce wines that obtain higher prices while cooler summers with more rain gives lower priced wines. 1961 is an year where an extremely high quality wine was produced.
Two variable regression
```{r}
model5  <- lm(...,data=winetrain)
summary(model5)
```
LPRICE = -10.69 + 0.602*DEGREES - 0.0045*HRAIN. Both variables are extremely significant in the fit with R^2 = 0.7 and adjusted R^2 = 0.68.
Multiple linear regression
```{r}
model6  <- lm(LPRICE~ ,data=winetrain)
summary(model6)
cor(winetrain)
```
Note tha TIME_SV coefficients are not defined as it is perfectly correlated with the VINT variable (perfect multicollinearity). We drop the variable and redo the regression. High correlation (in absolute value) between independent variables is not good (indication of multicollinearity) while high correlation (in absolute value) between dependent and independent variables is good.
summary(model7)
model7  <- lm(LPRICE~VINT+WRAIN+DEGREES+HRAIN, data=winetrain)
model7  <- lm(LPRICE~VINT+WRAIN+DEGREES+HRAIN, data=winetrain)
winetrain <- subset(wine, wine$VINT<=1978 & !is.na(wine$LPRICE))
winetrain
winetrain
winetest <- subset(wine, wine$VINT>1978)
winetest
model7  <- lm(LPRICE~VINT+WRAIN+DEGREES+HRAIN, data=winetrain)
summary(model7)
model7a <- lm(LPRICE~WRAIN+DEGREES+HRAIN,data=winetrain)
summary(model7a)
install.packages("rmarkdown")
#install.packages("ggplot2")
#install.packages("psych")
#install.packages("ggfortify")
library("ggplot2")
library("psych")
library("ggfortify")
wine <- read.csv("wine(2).csv")
str(wine)
summary(wine)
is.na(wine)
wine <- read.csv("wine(2).csv")
str(wine)
summary(wine)
is.na(wine)
ggplot(wine, aes(VINT,LPRICE)) + geom_point(na.rm=T) + geom_smooth(method="lm", na.rm=T, se=T)
pairs.panels(wine, ellipses=F, lm =T, breaks=10, hist.col="blue")
winetrain <- subset(wine, wine$VINT<=1978 & !is.na(wine$LPRICE))
winetrain
winetest <- subset(wine, wine$VINT>1978)
winetest
model1  <- lm(LPRICE~VINT, data = winetrain)
summary(model1)
autoplot(model1)
model1  <- lm(LPRICE~VINT, data = winetrain)
summary(model1)
model1$residuals
sse1 <- sum(model1$residuals^2)
sst1 <- sum(winetrains$LPRICE - mean(winetrain$LPRICE))^2
sst1 <- sum(winetrains$LPRICE - mean(winetrain$LPRICE))^2
sst1 <- sum(winetrain$LPRICE - mean(winetrain$LPRICE))^2
1 - sse1/sst1
summary(model1)
#summary(model1)
str(winetest)
wineprediction7 <- predict(model7, newdata=winetest)
cbind(c(1979, 1980), winetest$LPRICE[1:2], wineprediction7[1:2])
sse7 <- sum((wineprediction7[1:2]-winetest$LPRICE[1:2])^2)
1 - sse7/sst
sse4 <- sum((wineprediction4[1:2]-winetest$LPRICE[1:2])^2)
wineprediction5 <- predict(model5,newdata=winetest)
sse5 <- sum((wineprediction5[1:2]-winetest$LPRICE[1:2])^2)
1-sse5/sst
sse7 <- sum((wineprediction7[1:2]-winetest$LPRICE[1:2])^2)
sst <-sum((winetest$LPRICE[1:2]- mean(winetrain$LPRICE))^2)
1 - sse7/sst
sse4 <- sum((wineprediction4[1:2]-winetest$LPRICE[1:2])^2)
model2  <- lm(LPRICE~WRAIN,data=winetrain)
model2  <- lm(LPRICE~WRAIN,data=winetrain)
summary(model2)
model3  <- lm(LPRICE~DEGREES,data=winetrain)
model3  <- lm(LPRICE~DEGREES,data=winetrain)
summary(model3)
model4  <- lm(LPRICE~HRAIN,data=winetrain)
summary(model4)
br<-mean(winetrain$LPRICE)
model5  <- lm(LPRICE~DEGREES+HRAIN,data=winetrain)
summary(model5)
ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf))))+geom_point(na.rm=T) + scale_color_discrete(name = "LPRICE", labels = c("<= mean(LPrice)", "> mean(LPRICE)"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
ggplot(winetrain,aes(DEGREES,HRAIN,color=cut(LPRICE,c(-Inf,-1.42,Inf))))+geom_point(na.rm=T) + scale_color_discrete(name = "LPRICE", labels = c("<= mean(LPrice)", "> mean(LPRICE)"))+geom_vline(xintercept=mean(winetrain$DEGREES),color="blue",lwd=1) + geom_hline(yintercept=mean(winetrain$HRAIN),color="blue",lwd=1)
plot(winetrain$DEGREES,winetrain$HRAIN,col=ifelse(winetrain$LPRICE>=mean(winetrain$LPRICE),"red","black"))
model6  <- lm(LPRICE~VINT+WRAIN+DEGREES+HRAIN+TIME_SV ,data=winetrain)
summary(model6)
cor(winetrain)
model7  <- lm(LPRICE~VINT+WRAIN+DEGREES+HRAIN, data=winetrain)
summary(model7)
model7a <- lm(LPRICE~VINT+DEGREES+HRAIN,data=winetrain)
model7a <- lm(LPRICE~VINT+DEGREES+HRAIN,data=winetrain)
summary(model7a)
summary(model7)
summary(model7a)
model7$coefficients
model7$residuals
confint(model7)
confint(model7,level=0.99)
confint(model7)
confint(model7,level=0.99)
str(winetest)
wineprediction7 <- predict(model7, newdata=winetest)
wineprediction7
cbind(c(1979, 1980), winetest$LPRICE[1:2], wineprediction7[1:2])
sse7 <- sum((wineprediction7[1:2]-winetest$LPRICE[1:2])^2)
sst <-sum((winetest$LPRICE[1:2]- mean(winetrain$LPRICE))^2)
1 - sse7/sst
sse4 <- sum((wineprediction4[1:2]-winetest$LPRICE[1:2])^2)
1-sse4/sst
sse4 <- sum((wineprediction4[1:2]-winetest$LPRICE[1:2])^2)
wineprediction7 <- predict(model7, newdata=winetest)
wineprediction7
len(x)
length(x)
x.len
x.length
length(x)
x <- c(4,2,6)
y <- c(1,0,-1)
length(x)
sum(x)
sum(x^2)
x+y
x*y
x-2
x^2
x*y[1:2]
x*y [1:2]
(x*y)[1:2]
#Qs2
7:11
seq(2,9)
seq(4,10,by=2)
seq(3,30,length=10)
seq(6,-4,by=-2)
#Qs3
rep(2,4)
rep(c(1,5),4)
rep(c(1,2),c(4,4))
x[2]
x[2:4]
#Qs4
x <- c(5,9,2,3,4,6,7,0,8,12,2,9)
x[2]
x[2:4]
x[c(2,3,6)]
x[c(1:5,10:12)]
x[-(10:12)]
#Qs5
x <- [[3,2],[-1,-1]]
#Qs5
x <- array(c[3,2,-1,-1], dim=c(2,2))
#Qs5
x <- array(c(3,2,-1,-1), dim=c(2,2))
x
#Qs5
x <- array(c(3, -1,2,-1), dim=c(2,2))
y <- array(c(1,0,4,1,0,-1), dim=c(2,3))
y
2*x
x*x
x%*%x
x%*%y
t(y)
solve(x)
x
solve(x)?
?solve(x)
?solve()
?t()
x[1,]
x
x[,]
x[1,]
x[,1]
#Qs6
df <- read.csv("/Users/james/OneDrive - Singapore University of Technology and Design/SUTD/Year 3/Term 6/40.016 - The Analytics Edge/Exercise/Week 1/AnonymityPoll(2).csv")
head(df)
summary(df)
str(df)
head(df)
#6(b)
table(df$Smartphone)
df$Smartphone==NA
count(df$Smartphone==NA)
df$Smartphone==NA.count()
sum(df$Smartphone==NA)
df$Smartphone
df$Smartphone==NA
sum(is.na(df$Smartphone)
sum(is.na(df$Smartphone))
table(is.na(df$Smartphone))
table(is.na(df$Smartphone)==TRUE)
table(is.na(df$Smartphone)=TRUE)
table(is.na(df$Smartphone)=="TRUE")
is.na(df$Smartphone)==TRUE
is.na(df$Smartphone)
sum(is.na(df$Smartphone))
#6(c)
table(df$Internet.Use, df$Smartphone)
#6(c)
table(df$Internet.Use==0, df$Smartphone)
#6(c)
table(df$Internet.Use, df$Smartphone)
spi2020<-subset(sp2011to2020,SPI.year =="2020" & Status=="Ranked")
rownames(spi2020)<-spi2020[,2]
spi2020<-spi2020[,-c(1:6)]
#Qs6
df <- read.csv("/Users/james/OneDrive - Singapore University of Technology and Design/SUTD/Year 3/Term 6/40.016 - The Analytics Edge/Exercise/Week 1/AnonymityPoll(2).csv")
head(df)
#6(a)
summary(df)
str(df)
#6(b)
table(df$Smartphone) #Similar to value_count in Pytnon Pandas
sum(is.na(df$Smartphone))
#6(c)
table(df$Internet.Use, df$Smartphone)
#6(d)
sum(is.na(df$Internet.Use))
sum(is.na(df$Smartphone))
#6(e)
limited <-
?subset
#6(e)
limited <-
?subset()
#6(e)
limited <-
?subset()
?subset()
#6(e)
limited <- subset(df, df$Internet.Use == 1 | df$Smartphone == 1)
str(limited)
#6(f)
sum(is.na(limited))
#6(f)
summary(limited)
#6(g)
df$Info.On.Internet
#6(g)
mean(df$Info.On.Internet)
#6(g)
mean(limited$Info.On.Internet)
#6(h)
limited$Info.On.Internet == 0
#6(h)
count(limited$Info.On.Internet == 0)
#6(h)
sum(limited$Info.On.Internet == 0)
sum(limited$Info.On.Internet == 11)
#6(e)
limited <- subset(df, df$Internet.Use == 1 | df$Smartphone == 1)
str(limited)
#6(i)
sum(limited$Info.On.Internet == 1)/sum(limited$Info.On.Internet)
#6(i)
mean(limited$Worry.About.Info, na.rm = TRUE)
#6(j)
mean(limited$Anonymity.Possible, na.rm = TRUE)
#6(k)
hist(limited$Age)
#or
library("ggplot2")
ggplot(limited)+geom_histogram(aes(Age),na.rm=T,binwidth=5,color="black",fill="lightblue")
install.packages("ggplot2")
install.packages("ggplot2")
#or
library("ggplot2")
ggplot(limited)+geom_histogram(aes(Age),na.rm=T,binwidth=5,color="black",fill="lightblue")
#6(l)
table(limited$Info.On.Internet, limited$Age)
#6(e)
limited <- subset(df, df$Internet.Use == 1 | df$Smartphone == 1)
#6(g)
mean(limited$Info.On.Internet)
#6(f)
summary(limited)
#6(l)
max(table(limited$Info.On.Internet, limited$Age))
#6(m)
jitter(c(1,2,3))
#6(m)
jitter(c(1,1,2,3))
#6(m)
jitter(c(1,1,2,2,3))
#6(n)
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
#6(n)
ggplot(limited,aes(Age,Info.On.Internet)) +geom_point(position="jitter",na.rm=T)
?tapply()
#6(o)
tapply(limited$Info.On.Internet, limited$Smartphone, mean)
#6(o)
tapply(limited$Info.On.Internet, mean)
#6(o)
tapply(limited$Info.On.Internet, [0,1], mean)
#6(o)
tapply(limited$Info.On.Internet, c(0,1), mean)
limited$Smartphone
#6(o)
tapply(limited$Info.On.Internet, limited$Smartphone, mean)
#6(p)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, mean)
#6(p)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, table)
#6(p)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, mean, na.rm = TRUE)
#Qs7
data(swiss)
head(swiss)
?stars
?swiss
stars(swiss, key.loc=c(18,2))
#Qs7
data(swiss)
head(swiss)
?stars
?swiss
stars(swiss, key.loc=c(18,2))
#7(b)
stars(as.matrix(swiss[, c(2,3,5,6)]),location = as.matrix(swiss[, c(4,1)]),axes = T)
#7(c)
stars(as.matrix(swiss[,c(2,3,5,6)]), location = as.matrix(swiss[,c(4,1)]), axes = T, labels = NULL, len = 3, main = "Fertility against Education", xlab = "Education", ylab = "Fertility", draw.segments = TRUE, key.loc = c(80,35))
#Qs8
#Qs8(a)
parole_df <- read.csv("Parole(3).csv")
setwd("~/OneDrive - Singapore University of Technology and Design/SUTD/Year 3/Term 6/40.016 - The Analytics Edge/Exercise/Week 1")
#Qs8
#Qs8(a)
parole_df <- read.csv("Parole(3).csv")
count(parole_df$Male == 0)/count(parole_df$Male)
count(parole_df$Male)
count(parole_df)
count(parole_df, vars="Male")
#Qs8(b)
table(parole_df$Violator,parole_df$Male)
#Qs8
#Qs8(a)
Parole <- read.csv("Parole(3).csv")
#Qs8(b)
table(Parole$Violator,Parole$Male)
#Qs8(c)
table(Parole$State,Parole$Crime)
#Qs8(d)
ggplot(data = Parole, aes(x = Age)) + geom_histogram()
library(ggplot2)
#Qs8(d)
ggplot(data = Parole, aes(x = Age)) + geom_histogram()
#Qs8(d)
ggplot(data = Parole, aes(x = Age)) + geom_histogram(binwidth=5,closed=c("left"),center=17.5)
#Qs8(e)
ggplot(data = Parole, aes(x = Age)) + geom_histogram(binwidth=5,closed=c("left"),center=17.5,color=c("blue"))
#Qs8(f)
ggplot(data = Parole, aes(x = Age)) + geom_histogram(binwidth=5,closed=c("left"),center=17.5,color=c("blue"))+facet_grid(Male~.)
